# Research Articles in Simplified HTML (RASH) format - Version 0.5, February 15, 2016
# by Silvio Peroni
# 
# with precious contributions by Mike Smith and Ruben Verborgh.
# 
# This work is licensed under a Creative Commons Attribution 4.0 International License (http://creativecommons.org/licenses/by/4.0/).
# You are free to:
# * Share - copy and redistribute the material in any medium or format
# * Adapt - remix, transform, and build upon the material
# for any purpose, even commercially.
# 
# The licensor cannot revoke these freedoms as long as you follow the license terms.
# 
# Under the following terms:
# * Attribution - You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.

default namespace = "http://www.w3.org/1999/xhtml"
namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"
namespace ns1 = "http://www.w3.org/1998/Math/MathML"
namespace ns2 = "http://www.w3.org/2000/svg"

start = html
# Elements
html =
  element html {
    attribute prefix {
      xsd:string {
        pattern = "[\s\S]*schema:\s+http://schema.org/[\s\S]*"
        pattern =
          "[\s\S]*prism:\s+http://prismstandard.org/namespaces/basic/2.0/[\s\S]*"
      }
    },
    attributes_html_generic,
    attributes_rdfa_statements,
    aVocab?,
    head,
    body
  }
head =
  element head {
    attributes_html_element_no_role,
    (title
     & (cm_meta_author
        | meta_keyword*
        | meta_category*
        | meta*
        | script*
        | link*)+)
  }
script =
  element script { aSrc }
  | element script {
      attribute type {
        "text/turtle"
        | "application/ld+json"
        | "text/csv"
        | "text/rdf+xml"
      },
      text
    }
link =
  element link {
    aHref?,
    attributes_html_generic,
    attributes_html_head_generic,
    attributes_rdfa_syntax,
    attributes_rdfa_subject,
    aProperty?,
    aRel?,
    attributes_rdfa_resource,
    attributes_rdfa_literal,
    attributes_rdfa_macro
  }
meta = element meta { attributes_html_head_element }
meta_category =
  element meta {
    attribute name { xsd:string "dcterms.subject" },
    attributes_html_element_no_role
  }
meta_keyword =
  element meta {
    attribute property { xsd:string "prism:keyword" },
    attributes_html_generic,
    attributes_rdfa_no_property
  }
meta_author_name =
  element meta {
    attribute about { text },
    attribute name { xsd:string "dc.creator" },
    attributes_html_generic,
    attributes_rdfa_no_about
  }
meta_author_email =
  element meta {
    attribute about { text },
    attribute property { xsd:string "schema:email" },
    attributes_html_generic,
    attributes_rdfa_no_property
  }
link_author_affiliation =
  element link {
    attribute about { text },
    attribute property { xsd:string "schema:affiliation" },
    attribute href { xsd:anyURI },
    attributes_html_generic,
    attributes_rdfa_no_property
  }
body =
  element body {
    attributes_html_element_no_role,
    abstract?,
    section+,
    acknowledgements?,
    references?,
    footnotes?
  }
li = element li { attributes_html_element_no_role, cm_container }
li_biblioentry =
  element li {
    attribute role {
      xsd:string { pattern = "doc-biblioentry" }
    },
    attributes_html_element_no_role,
    cm_container
  }
ul = element ul { attributes_html_element_no_role, li+ }
ol = element ol { attributes_html_element_no_role, li+ }
p = element p { attributes_html_element_no_role, cm_inline }
pre =
  element pre {
    attributes_html_element_no_role,
    element code { attributes_html_element_no_role, cm_inline }
  }
blockquote =
  element blockquote { attributes_html_element_no_role, cm_container }
h1 = element h1 { attributes_html_element_no_role, cm_inline }
title = element title { attributes_html_element_no_role, text }
table = element table { attributes_html_element_no_role, tr+ }
tr = element tr { attributes_html_element_no_role, (th | td)+ }
th =
  element th {
    attributes_html_element_no_role, aRowspan?, aColspan?, cm_inline
  }
td =
  element td {
    attributes_html_element_no_role, aRowspan?, aColspan?, cm_container
  }
abstract =
  element section {
    attribute role {
      xsd:string { pattern = "doc-abstract" }
    },
    attributes_html_element_no_role,
    cm_sections
  }
section =
  element section { attributes_html_element_no_role, cm_sections }
acknowledgements =
  element section {
    attribute role {
      xsd:string { pattern = "doc-acknowledgements" }
    },
    attributes_html_element_no_role,
    cm_sections
  }
references =
  element section {
    attribute role {
      xsd:string { pattern = "doc-bibliography" }
    },
    attributes_html_element_no_role,
    h1,
    (element ul { attributes_html_element_no_role, li_biblioentry+ }
     | element ol { attributes_html_element_no_role, li_biblioentry+ })
  }
footnotes =
  element section {
    attribute role {
      xsd:string { pattern = "doc-footnotes" }
    },
    attributes_html_element_no_role,
    element section {
      attribute role {
        xsd:string { pattern = "doc-footnote" }
      },
      attributes_html_element_no_role,
      cm_container
    }+
  }
figurebox =
  element figure {
    attributes_html_element_no_role,
    element p { attributes_html_element_no_role, (img | svg) },
    caption
  }
listingbox =
  element figure { attributes_html_element_no_role, pre, caption }
tablebox =
  element figure { attributes_html_element_no_role, table, caption }
formulabox =
  element figure {
    attributes_html_element_no_role,
    (element p { attributes_html_element_no_role, img_math }
     | element p { attributes_html_element_no_role, math }
     | element p { attributes_html_element_no_role, span_latex })
  }
a =
  element a {
    attributes_html_element_no_role, aHref?, aNameRef?, cm_inline
  }
aRef =
  element a {
    attributes_html_element_no_role,
    attribute href { xsd:anyURI },
    aNameRef?
  }
em = element em { attributes_html_element_no_role, cm_inline }
strong = element strong { attributes_html_element_no_role, cm_inline }
q = element q { attributes_html_element_no_role, cm_inline }
sup = element sup { attributes_html_element_no_role, cm_inline }
sub = element sub { attributes_html_element_no_role, cm_inline }
span = element span { attributes_html_element_no_role, cm_inline }
code = element code { attributes_html_element_no_role, cm_inline }
img = element img { attributes_html_element_no_role, aSrc, aAlt }
caption =
  element figcaption { attributes_html_element_no_role, cm_inline }
img_math =
  element img {
    attribute role { "math" },
    attributes_html_element_no_role,
    aSrc,
    aAlt
  }
math = element ns1:math { cm_mathml_element }
mathml_element = element ns1:* { cm_mathml_element }
svg = element ns2:svg { cm_svg_element }
svg_element = element ns2:* { cm_svg_element }
span_latex =
  element span {
    attribute role { "math" },
    attributes_html_element_no_role,
    text
  }
# /END Elements

# Attributes
aSrc = attribute src { xsd:anyURI }
aAlt = attribute alt { xsd:string }
aHref = attribute href { xsd:anyURI }
aNameRef = attribute name { xsd:anyURI }
aRowspan = [ a:defaultValue = "1" ] attribute rowspan { xsd:integer }
aColspan = [ a:defaultValue = "1" ] attribute colspan { xsd:integer }
aName = attribute name { xsd:string }
aCharset = attribute charset { xsd:string }
aId = attribute id { xsd:ID }
aLang = attribute lang { xsd:language }
aValue = attribute value { xsd:string }
aClass = attribute class { xsd:NMTOKENS }
aContent = attribute content { xsd:string }
aLevel = attribute level { xsd:integer }
# /END Attributes

# RDFa specific
aVocab = attribute vocab { xsd:string }
aTypeof = attribute typeof { xsd:string }
aProperty = attribute property { xsd:string }
aResource = attribute resource { xsd:string }
aPrefix = attribute prefix { xsd:string }
aAbout = attribute about { xsd:string }
aRel = attribute rel { xsd:string }
aRev = attribute rev { xsd:string }
aDatatype = attribute datatype { xsd:string }
aInlist = attribute inlist { xsd:string }
# /END RDFa specific

# Content Models
cm_container =
  (p
   | pre
   | blockquote
   | ul
   | ol
   | tablebox
   | figurebox
   | formulabox
   | listingbox)+
cm_inline =
  (text
   | a
   | aRef
   | img
   | svg
   | math
   | img_math
   | span_latex
   | span
   | code
   | sub
   | sup
   | em
   | strong
   | q)*
cm_sections =
  h1,
  (p
   | pre
   | blockquote
   | ul
   | ol
   | tablebox
   | figurebox
   | formulabox
   | listingbox
   | section)+
cm_mathml_element =
  (attribute * { text }
   | text
   | mathml_element)*
cm_svg_element =
  (attribute * { text }
   | text
   | svg_element)*
cm_meta_author =
  meta_author_name, meta_author_email, link_author_affiliation
# Content models for HTML attributes
attributes_html_head_element =
  attributes_html_generic, attributes_html_head_generic, attributes_rdfa
attributes_html_head_generic = aName?, aCharset?
attributes_html_element_no_role =
  attributes_html_generic, aClass?, attributes_rdfa
attributes_html_generic = aId?
# The following chategorisation of RDFa attributes has been taken 
# from http://www.w3.org/TR/rdfa-syntax/#attribute_roles 
attributes_rdfa = attributes_rdfa_syntax, attributes_rdfa_statements
attributes_rdfa_statements =
  attributes_rdfa_subject,
  attributes_rdfa_predicate,
  attributes_rdfa_resource,
  attributes_rdfa_literal,
  attributes_rdfa_macro
attributes_rdfa_syntax = aPrefix?, aVocab?
attributes_rdfa_subject = aAbout?
attributes_rdfa_predicate = aProperty?, attributes_rdfa_rel_rev
attributes_rdfa_rel_rev = aRel?, aRev?
attributes_rdfa_resource =
  (aResource?)
  # @href and @src are not included here since thay can be used in RDFa 
  # fashion only with those elements that include them 
  
attributes_rdfa_literal = aLang?, aContent?, aDatatype?
attributes_rdfa_macro = aTypeof?, aInlist?
# It defines a particular restriction of use of RDFa without the attribute property
attributes_rdfa_no_about =
  attributes_rdfa_syntax,
  attributes_rdfa_predicate,
  attributes_rdfa_resource,
  attributes_rdfa_literal,
  attributes_rdfa_macro
attributes_rdfa_no_property =
  attributes_rdfa_syntax,
  attributes_rdfa_rel_rev,
  attributes_rdfa_resource,
  attributes_rdfa_literal,
  attributes_rdfa_macro
# /END Content Models
